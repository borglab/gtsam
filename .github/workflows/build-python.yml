name: Python CI

on: [pull_request]

jobs:
  build:
    name: ${{ matrix.name }} ${{ matrix.build_type }} Python ${{ matrix.python_version }}
    runs-on: ${{ matrix.os }}

    env:
      CTEST_OUTPUT_ON_FAILURE: ON
      CTEST_PARALLEL_LEVEL: 2
      CMAKE_BUILD_TYPE: ${{ matrix.build_type }}
      PYTHON_VERSION: ${{ matrix.python_version }}

    strategy:
      fail-fast: false
      matrix:
        # Github Actions requires a single row to be added to the build matrix.
        # See https://help.github.com/en/articles/workflow-syntax-for-github-actions.
        name: [
          ubuntu-18.04-gcc-5,
          ubuntu-18.04-gcc-9,
          ubuntu-18.04-clang-9,
          macOS-10.15-xcode-11.3.1,
          ubuntu-18.04-gcc-5-tbb,
        ]

        build_type: [Debug, Release]
        python_version: [3]
        include:
          - name: ubuntu-18.04-gcc-5
            os: ubuntu-18.04
            compiler: gcc
            version: "5"

          - name: ubuntu-18.04-gcc-9
            os: ubuntu-18.04
            compiler: gcc
            version: "9"

          - name: ubuntu-18.04-clang-9
            os: ubuntu-18.04
            compiler: clang
            version: "9"

          # NOTE temporarily added this as it is a required check.
          - name: ubuntu-18.04-clang-9
            os: ubuntu-18.04
            compiler: clang
            version: "9"
            build_type: Debug
            python_version: "3"

          - name: macOS-10.15-xcode-11.3.1
            os: macOS-10.15
            compiler: xcode
            version: "11.3.1"

          - name: ubuntu-18.04-gcc-5-tbb
            os: ubuntu-18.04
            compiler: gcc
            version: "5"
            flag: tbb

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install (Linux)
        if: runner.os == 'Linux'
        run: |
          if [ "${{ matrix.compiler }}" = "clang" ] && [ "${{ matrix.version }}" = "9" ]; then
            # (ipv4|ha).pool.sks-keyservers.net is the SKS GPG global keyserver pool
            # ipv4 avoids potential timeouts because of crappy IPv6 infrastructure
            # 15CF4D18AF4F7421 is the GPG key for the LLVM apt repository
            # This key is not in the keystore by default for Ubuntu so we need to add it.
            LLVM_KEY=15CF4D18AF4F7421
            gpg --keyserver keyserver.ubuntu.com --recv-key $LLVM_KEY || gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-key $LLVM_KEY
            gpg -a --export $LLVM_KEY | sudo apt-key add -
            sudo add-apt-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main"
          fi
          sudo apt-get -y update
          
          sudo apt-get -y install cmake build-essential pkg-config libpython-dev python-numpy libboost-all-dev
          
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            sudo apt-get install -y g++-${{ matrix.version }} g++-${{ matrix.version }}-multilib
            echo "CC=gcc-${{ matrix.version }}" >> $GITHUB_ENV
            echo "CXX=g++-${{ matrix.version }}" >> $GITHUB_ENV
          else
            sudo apt-get install -y clang-${{ matrix.version }} g++-multilib
            echo "CC=clang-${{ matrix.version }}" >> $GITHUB_ENV
            echo "CXX=clang++-${{ matrix.version }}" >> $GITHUB_ENV
          fi
      - name: Install (macOS)
        if: runner.os == 'macOS'
        run: |
          brew tap ProfFan/robotics
          brew install cmake ninja
          brew install boost
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            brew install gcc@${{ matrix.version }}
            echo "CC=gcc-${{ matrix.version }}" >> $GITHUB_ENV
            echo "CXX=g++-${{ matrix.version }}" >> $GITHUB_ENV
          else
            sudo xcode-select -switch /Applications/Xcode_${{ matrix.version }}.app
            echo "CC=clang" >> $GITHUB_ENV
            echo "CXX=clang++" >> $GITHUB_ENV
          fi
      - name: Set GTSAM_WITH_TBB Flag
        if: matrix.flag == 'tbb'
        run: |
          echo "GTSAM_WITH_TBB=ON" >> $GITHUB_ENV
          echo "GTSAM Uses TBB"
      - name: Build (Linux)
        if: runner.os == 'Linux'
        run: |
          bash .github/scripts/python.sh
      - name: Build (macOS)
        if: runner.os == 'macOS'
        run: |
          bash .github/scripts/python.sh
