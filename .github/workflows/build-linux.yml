name: Linux CI

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.name }} ${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}

    env:
      CTEST_OUTPUT_ON_FAILURE: ON
      CTEST_PARALLEL_LEVEL: 2
      CMAKE_BUILD_TYPE: ${{ matrix.build_type }}
      GTSAM_BUILD_UNSTABLE: ${{ matrix.build_unstable }}

    strategy:
      fail-fast: false
      matrix:
        # Github Actions requires a single row to be added to the build matrix.
        # See https://help.github.com/en/articles/workflow-syntax-for-github-actions.
        name: [
          ubuntu-18.04-gcc-5,
          ubuntu-18.04-gcc-9,
          ubuntu-18.04-clang-9,
        ]

        build_type: [Debug, Release]
        build_unstable: [ON]
        include:
          - name: ubuntu-18.04-gcc-5
            os: ubuntu-18.04
            compiler: gcc
            version: "5"

          - name: ubuntu-18.04-gcc-9
            os: ubuntu-18.04
            compiler: gcc
            version: "9"

          - name: ubuntu-18.04-clang-9
            os: ubuntu-18.04
            compiler: clang
            version: "9"

    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Install (Linux)
        if: runner.os == 'Linux'
        run: |
          # LLVM 9 is not in Bionic's repositories so we add the official LLVM repository.
          if [ "${{ matrix.compiler }}" = "clang" ] && [ "${{ matrix.version }}" = "9" ]; then
            sudo add-apt-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main"
          fi
          sudo apt-get -y update

          sudo apt install cmake build-essential pkg-config libpython-dev python-numpy
          
          echo "::set-env name=BOOST_ROOT::$(echo $BOOST_ROOT_1_69_0)"
          echo "::set-env name=LD_LIBRARY_PATH::$(echo $BOOST_ROOT_1_69_0/lib)"
          
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            sudo apt-get install -y g++-${{ matrix.version }} g++-${{ matrix.version }}-multilib
            echo "::set-env name=CC::gcc-${{ matrix.version }}"
            echo "::set-env name=CXX::g++-${{ matrix.version }}"
          else
            sudo apt-get install -y clang-${{ matrix.version }} g++-multilib
            echo "::set-env name=CC::clang-${{ matrix.version }}"
            echo "::set-env name=CXX::clang++-${{ matrix.version }}"
          fi
      - name: Check Boost version
        if: runner.os == 'Linux'
        run: |
          echo "BOOST_ROOT = $BOOST_ROOT"
      - name: Build (Linux)
        if: runner.os == 'Linux'
        run: |
          bash .github/scripts/unix.sh -t